; https://tox.readthedocs.io/en/latest/example/package.html
[tox]
envlist = py37,py38,py39,py310
isolated_build = True

[testenv]
deps = pipenv
commands=
    pipenv install --dev
    pipenv run pytest tests

; advanced stuff for later usage
; https://github.com/ansys/ansys-templates/blob/main/tox.ini
; [tox]
; description = Default environments to be executed when calling tox
; envlist =
;     style
;     {py37,py38,py39,py310}{,-keep-output}{,-python}
;     doc
; isolated_build = true
; isolated_build_env = build

; [testenv]
; description = Generic environment configuration
; basepython =
;     py37: python3.7
;     py38: python3.8
;     py39: python3.9
;     py310: python3.10
;     py: python3
;     {style,doc,build}: python3
; passenv = *
; setenv =
;     PYTHONUNBUFFERED = yes
;     smoke: PYTEST_MARKERS = -k "not tests_templates"
;     python: PYTEST_MARKERS = -k "tests_templates_python"
;     template: PYTEST_MARKERS = -k "{env:TEMPLATE:}"
;     keep-output: PYTEST_EXTRA_ARGS = --basetemp=output
;     cov: PYTEST_EXTRA_ARGS = --cov=templates --cov-report=term --cov-report=xml --cov-report=html
; skip_install = false
; deps =
;     -r{toxinidir}/requirements/requirements_tests.txt
; commands =
;     pytest {env:PYTEST_MARKERS:} {env:PYTEST_EXTRA_ARGS:} {posargs: tests -vvv}

; [testenv:style]
; description = Checks if code style applies
; skip_install = true
; deps =
;     pre-commit
; commands =
;     pre-commit install
;     pre-commit run --all-files --show-diff-on-failure

; [testenv:doc]
; description = Checks if project documentation properly builds
; skip_install = false
; deps =
;     -r{toxinidir}/requirements/requirements_doc.txt
; allowlist_externals=*
; commands =
;     sphinx-build -d "{toxworkdir}/doc_doctree" doc/source "{toxworkdir}/doc_out" --color -vW -bhtml
;     touch "{toxworkdir}/doc_out/.nojekyll"
;     bash -c 'echo "templates" > "{toxworkdir}/doc_out/CNAME"'
